# PREAMBLE ---------------------------------------------------------------

library(tidyverse)
library(knitr)
library(xaringan)
library(rmarkdown)
library(ggthemes)
library(zoo)
library(readxl)
library(lubridate)
library(scales)
library(easynls)
library(gridExtra)
library(readxl)
library(survey)
library(vcd)
library(XML)
library(xml2)
library(sp)
library(rgdal)
library(leaflet)
library(mapview)
library(widgetframe)
library(rvest)
library(ggmap)


# PLOT FORMATS ----

background <- c("#e5e5df")

theme_mc <- theme_economist() + 
  theme(legend.position="none") + 
  theme(plot.title = element_text(size = 10, face = "bold")) +
  theme(axis.text = element_text(size = 10, vjust = 0.3, hjust = 0.5)) +
  theme(axis.title.y = element_text(size = 10)) +
  theme(axis.line = element_blank()) +
  theme(axis.ticks.y = element_blank()) +
  theme(plot.caption = element_text(hjust = 0, size = 9)) +
  theme(plot.background = element_rect(fill = background)) +  
  theme(panel.background = element_rect(fill = background)) +   
  theme(panel.grid.major.y =  element_blank())

stroke_size <- 0.75

line_color <- "#2166ac"

ggmap::register_google(key = "AIzaSyDBDB2NYmFVO4ojP4XQpIsdrcRmOmwGgMc")

# IMPORT ------------------------------------------------------------------

d <- "C:/Users/matt/Dropbox/2a. Election/UH_2021/" # parent directory for the data

uh21 <- read_csv(paste0(d, "data/uh21.csv"))

uh19 <- read_csv(paste0(d, "data/uh19.csv"))

fed_elec <- readOGR(paste0(d, "data/NSW_electoral_boundaries_25-02-2016.shx"))

# TIDY

uh21 <- uh21 %>% 
  rename(pb = `Venue and Vote Types`)

uh21 <- uh21 %>% 
  gather(key = "party", value = "v", -c(pb, lab))

uh21$year <- "2021"

uh19 <- uh19 %>% 
  rename(pb = `Venue and Vote Types`)

uh19 <- uh19 %>% 
  gather(key = "party", value = "v", -c(pb, lab))

uh19$year <- "2019"

uh19$v <- as.numeric(uh19$v)

uh <- bind_rows(uh21, uh19)

uh <- uh %>% 
  filter(party != "Informal")

uh <- uh %>% 
  select(-pb) %>% 
  group_by(lab, year) %>% 
  mutate(p = v / sum(v, na.rm = T) * 100) %>% 
  ungroup() 
 
uh21 <- uh %>% 
  filter(year == "2021") %>% 
  rename(p21 = p,
         v21 = v) %>% 
  select(-year)

uh19 <- uh %>% 
  filter(year == "2019") %>% 
  select(-year) %>% 
  rename(p19 = p,
         v19 = v)

uh <- left_join(uh21, uh19, by = c("lab", "party"))

uh$s <- ifelse(is.na(uh$p19), uh$p21, uh$p21 - uh$p19)

pb <- tibble(lab = unique(uh$lab), lab_gg = paste0(unique(uh$lab), ", NSW"))

# uh_gg <- mutate_geocode(pb, lab_gg)

# uh_gg[uh_gg$lab == "Stan Theiss",]$lon <- 150.888657884235
  
# uh_gg[uh_gg$lab == "Stan Theiss",]$lat <- -32.26579979523917

# write_csv(uh_gg, paste0(d, "data/uh_gg.csv"))

uh_gg <- read_csv(paste0(d, "data/uh_gg.csv"))

uh_gg <- uh_gg %>% 
  select(-lab_gg)

uh <- left_join(uh, uh_gg, by = "lab")

uh_party <- uh %>% 
  ungroup() %>% 
  group_by(party) %>% 
  summarise(v21 = sum(v21, na.rm = T),
            v19 = sum(v19, na.rm = T)) %>% 
  mutate(p21 = v21 / sum(v21, na.rm = T) * 100,
         p19 = v19 / sum(v19, na.rm = T) * 100) %>% 
  ungroup() %>% 
  group_by(party) %>% 
  arrange(party) %>% 
  mutate(s = p21 - p19) %>% 
  ungroup() %>% 
  arrange(party)

# MAPS ----

uh_sp <- uh %>% 
  filter(!is.na(lon))

coordinates(uh_sp) <- ~lon + lat

proj4string(uh_sp) <- proj4string(fed_elec)

in_fed <- over(uh_sp, fed_elec)

uh_sp$fed_div <- in_fed$Elect_div

uh_m <- uh_sp@data

uh_fed <- uh_m %>% 
  group_by(fed_div, party) %>% 
  summarise(v21 = sum(v21, na.rm = T),
            v19 = sum(v19, na.rm = T)) %>% 
  mutate(p21 = v21 / sum(v21, na.rm = T) * 100, 
         p19 = v19 / sum(v19, na.rm = T) * 100,
         s = p21 - p19)

uh_fed <- uh_fed %>% 
  mutate(group = ifelse(party == "Labor", "Labor", 
                  ifelse(party == "Nats", "Nats",
                    ifelse(party == "One Nation", "One Nation",
                      ifelse(party == "SFF", "SFF",
                        ifelse(party == "Greens", "Greens",
                               "Other"))))))

uh_fed_g <- uh_fed %>% 
  group_by(fed_div, group) %>% 
  summarise(v21 = sum(v21, na.rm = T),
            v19 = sum(v19, na.rm = T)) %>% 
  mutate(p21 = v21 / sum(v21, na.rm = T) * 100, 
         p19 = v19 / sum(v19, na.rm = T) * 100,
         s = p21 - p19)

uh_fed_v <- uh_fed %>% 
  group_by(fed_div) %>% 
  summarise(v21 = sum(v21, na.rm = T)) %>% 
  mutate(p = v21 / sum(v21, na.rm = T) * 100)

uh_of_hunt <- 14937 / 102026 * 100

# maps

h_map <- fed_elec[fed_elec$Elect_div %in% "Hunter", ]

uh$popup_label <- paste0("<b>", uh$lab, "</b>", "<br/>", "Primary: ", round(uh$p21, 1), "%", "<br/>", "Primary Swing: ", round(uh$s, 1), "%")

pal_nat <- colorBin(c("#d6f5d6", "#adebad", "#5cd65c", "#33cc33", "#29a329", "#1f7a1f"), domain = uh$p21, bins = c(0, 10, 20, 30, 40, 50, 60))

m_nat <- leaflet(data = uh %>% filter(party == "Nats")) %>% 
  addProviderTiles(providers$CartoDB) %>% 
  addCircleMarkers(data = uh %>% filter(party == "Nats"), fillOpacity = 1, color = ~pal_nat(p21), radius = 5, stroke = FALSE, popup = ~popup_label) %>% 
  addPolygons(data = h_map, color = "blue", weight = 1, opacity = 1, fill = FALSE, label = h_map$Elect_div, highlight = highlightOptions(weight = 2, color = "blue", bringToFront = TRUE)) %>% 
  addLegend(title = "Nats primary (%)", pal = pal_nat, values = c(0, 60), position = "bottomright") 

saveWidget(m_nat, file="m_nat_uh.html")

pal_nat_s <- colorBin(c( "#ff1414", "#ff4e4e", "#ff8989", "#d6f5d6", "#29a329", "#1f7a1f"), domain = uh$s, bins = c(-30, -20, -10, 0, 10, 20, 30))

m_nat_s <- leaflet(data = uh %>% filter(party == "Nats")) %>% 
  addProviderTiles(providers$CartoDB) %>% 
  addCircleMarkers(data = uh %>% filter(party == "Nats"), fillOpacity = 1, color = ~pal_nat_s(s), radius = 5, stroke = FALSE, popup = ~popup_label) %>% 
  addPolygons(data = h_map, color = "blue", weight = 1, opacity = 1, fill = FALSE, label = h_map$Elect_div, highlight = highlightOptions(weight = 2, color = "blue", bringToFront = TRUE)) %>% 
  addLegend(title = "Nats primary vote swing(%)", pal = pal_nat_s, values = c(0, 60), position = "bottomright") 

# PLOTS ----

# primary votes by party
 
p_party_21 <- uh_party %>% 
  ungroup() %>% 
  top_n(7, p21) %>% 
  ggplot(aes(x = reorder(party, -p21), y = p21, fill = party))  + 
  geom_bar(stat="identity") + 
  theme_mc +
  labs(title = paste("Primary votes -", "2021"), caption = "", x = "", y = "") +
  theme(panel.grid.major = element_blank()) +
  geom_text(aes(label = paste(round(p21, 1))), vjust = -1, size=3) +
  scale_fill_manual(values = c(Nats = "dark green", Labor = "red", Greens = "green", AJP = "black", Archie = "grey", "One Nation" = "orange", Fraser = "grey", "Lib Dems" = "blue", Christian = "light blue", "O'Connell" = "grey", Reynolds = "grey", "SAP" = "purple", SFF = "blue", Norman = "grey")) +
  ylim(0, 50)
 
p_party_19 <- uh_party %>% 
  ungroup() %>% 
  top_n(7, p19) %>% 
  ggplot(aes(x = reorder(party, -p19), y = p19, fill = party))  + 
  geom_bar(stat="identity") + 
  theme_mc +
  labs(title = paste("Primary votes -", "2019"), caption = "", x = "", y = "") +
  theme(panel.grid.major = element_blank()) +
  geom_text(aes(label = paste(round(p19, 1))), vjust = -1, size=3) +
  scale_fill_manual(values = c(Nats = "dark green", Labor = "red", Greens = "green", AJP = "black", Archie = "grey", "One Nation" = "orange", Fraser = "grey", "Lib Dems" = "blue", Christian = "light blue", "O'Connell" = "grey", Reynolds = "grey", "SAP" = "purple", SFF = "blue", Norman = "grey")) +
  ylim(0, 50)
 
p_party_s <- uh_party %>% 
   ungroup() %>% 
   top_n(7, p21) %>% 
   ggplot(aes(x = reorder(party, -p21), y = s, fill = party))  + 
   geom_bar(stat="identity") + 
   theme_mc +
   labs(title = paste("Primary vote swing -", "2021"), caption = "", x = "", y = "") +
   theme(panel.grid.major = element_blank()) +
   geom_text(aes(label = paste(round(s,1)), vjust = ifelse(s >= 0, -1, 1.5)), size=3) +
  scale_fill_manual(values = c(Nats = "dark green", Labor = "red", Greens = "green", AJP = "black", Archie = "grey", "One Nation" = "orange", Fraser = "grey", "Lib Dems" = "blue", Christian = "light blue", "O'Connell" = "grey", Reynolds = "grey", "SAP" = "purple", SFF = "blue", Norman = "grey")) +
   ylim(-20,20)

p_pb_21 <- uh %>% 
  ungroup() %>% 
  filter(party == "Nats") %>% 
  ggplot(aes(x = reorder(lab, -p21), y = p21))  + 
  geom_bar(stat="identity", fill = "dark green") + 
  theme_mc +
  labs(title = paste("Nats primary votes -", "2021"), caption = "", x = "", y = "") +
  theme(panel.grid.major = element_blank()) +
  geom_text(aes(label = paste(round(p21, 1))), vjust = -1, size=3) +
  theme(axis.text.x = element_text(size = 8, angle = 90, vjust = 0.3, hjust = 1)) +
  ylim(0, 70)

p_pb_21_s <- uh_m %>% 
  filter(fed_div != "Sydney" & party == "Nats") %>% 
  ggplot(aes(x = reorder(lab, -s), y = s, fill = fed_div))  + 
  geom_bar(stat="identity") + 
  theme_mc +
  labs(title = paste("Nats swing on primary votes -", "2021"), caption = "", x = "", y = "") +
  theme(panel.grid.major = element_blank()) +
  geom_text(aes(label = paste(round(s, 1)), vjust = ifelse(s >= 0, -1, 1.5)), size=1.5) +
  theme(axis.text.x = element_text(size = 8, angle = 90, vjust = 0.3, hjust = 1)) +
  scale_fill_manual(values = c("New England" = "dark green", "Lyne" = "light green", Calare = "yellow", Hunter = "red" )) +
  theme(legend.position = "bottom", legend.text = element_text(size=9), legend.background = element_rect(fill = background), legend.key = element_rect(fill = background), legend.title = element_blank(), legend.key.size = unit(3.5, "mm")) +
  ylim(-15, 20)

p_pb_21_s_alp <- uh_m %>% 
  filter(fed_div != "Sydney" & party == "Labor") %>% 
  ggplot(aes(x = reorder(lab, -s), y = s, fill = fed_div))  + 
  geom_bar(stat="identity") + 
  theme_mc +
  labs(title = paste("Labor swing on primary votes -", "2021"), caption = "", x = "", y = "") +
  theme(panel.grid.major = element_blank()) +
  geom_text(aes(label = paste(round(s, 1)), vjust = ifelse(s >= 0, -1, 1.5)), size=1.5) +
  theme(axis.text.x = element_text(size = 8, angle = 90, vjust = 0.3, hjust = 1)) +
  scale_fill_manual(values = c("New England" = "dark green", "Lyne" = "light green", Calare = "yellow", Hunter = "red" )) +
  theme(legend.position = "bottom", legend.text = element_text(size=9), legend.background = element_rect(fill = background), legend.key = element_rect(fill = background), legend.title = element_blank(), legend.key.size = unit(3.5, "mm")) +
  ylim(-25, 20)

p_pb_21_s_on <- uh_m %>% 
  filter(fed_div != "Sydney" & party == "One Nation") %>% 
  ggplot(aes(x = reorder(lab, -s), y = s, fill = fed_div))  + 
  geom_bar(stat="identity") + 
  theme_mc +
  labs(title = paste("One Nation swing on primary votes -", "2021"), caption = "", x = "", y = "") +
  theme(panel.grid.major = element_blank()) +
  geom_text(aes(label = paste(round(s, 1)), vjust = ifelse(s >= 0, -1, 1.5)), size=1) +
  theme(axis.text.x = element_text(size = 6, angle = 90, vjust = 0.3, hjust = 1)) +
  scale_fill_manual(values = c("New England" = "dark green", "Lyne" = "light green", Calare = "yellow", Hunter = "red" )) +
  theme(legend.position = "right", legend.text = element_text(size=9), legend.background = element_rect(fill = background), legend.key = element_rect(fill = background), legend.title = element_blank(), legend.key.size = unit(3.5, "mm")) +
  ylim(0, 30)

p_pb_21_s_sff <- uh_m %>% 
  filter(fed_div != "Sydney" & party == "SFF") %>% 
  ggplot(aes(x = reorder(lab, -s), y = s, fill = fed_div))  + 
  geom_bar(stat="identity") + 
  theme_mc +
  labs(title = paste("Shooters swing on primary votes -", "2021"), caption = "", x = "", y = "") +
  theme(panel.grid.major = element_blank()) +
  geom_text(aes(label = paste(round(s, 1)), vjust = ifelse(s >= 0, -1, 1.5)), size=1) +
  theme(axis.text.x = element_text(size = 6, angle = 90, vjust = 0.3, hjust = 1)) +
  scale_fill_manual(values = c("New England" = "dark green", "Lyne" = "light green", Calare = "yellow", Hunter = "red" )) +
  theme(legend.position = "right", legend.text = element_text(size=9), legend.background = element_rect(fill = background), legend.key = element_rect(fill = background), legend.title = element_blank(), legend.key.size = unit(3.5, "mm")) +
  ylim(-45, 20)

p_hunter <- uh_fed_g %>% 
  filter(fed_div == "Hunter") %>% 
  ggplot(aes(x = reorder(group, -p21), y = p21, fill = group))  + 
  geom_bar(stat="identity") + 
  theme_mc +
  labs(title = paste("Primary votes in Federal seat of Hunter -", "2021"), caption = "", x = "", y = "") +
  theme(panel.grid.major = element_blank()) +
  geom_text(aes(label = paste(round(p21, 1))), vjust = -1, size=3) +
  scale_fill_manual(values = c(Nats = "dark green", Labor = "red", Greens = "green", AJP = "black", Archie = "grey", "One Nation" = "orange", Fraser = "grey", "Lib Dems" = "blue", Christian = "light blue", "O'Connell" = "grey", Reynolds = "grey", "SAP" = "purple", SFF = "blue", Norman = "grey", Other = "grey")) +
  ylim(0, 50)

p_hunter_s <- uh_fed_g %>% 
  filter(fed_div == "Hunter") %>% 
  ggplot(aes(x = reorder(group, -p21), y = s, fill = group))  + 
  geom_bar(stat = "identity") + 
  theme_mc +
  labs(title = paste("Primary vote swing in Federal seat of Hunter -", "2021"), caption = "", x = "", y = "") +
  theme(panel.grid.major = element_blank()) +
  geom_text(aes(label = paste(round(s,1)), vjust = ifelse(s >= 0, -1, 1.5)), size=3) +
  scale_fill_manual(values = c(Nats = "dark green", Labor = "red", Greens = "green", AJP = "black", Archie = "grey", "One Nation" = "orange", Fraser = "grey", "Lib Dems" = "blue", Christian = "light blue", "O'Connell" = "grey", Reynolds = "grey", "SAP" = "purple", SFF = "blue", Norman = "grey", Other = "grey")) +
  ylim(-15,20)

p_hunter_v <- uh_fed_v %>% 
  filter(fed_div != "Sydney") %>% 
  ggplot(aes(x = reorder(fed_div, -p), y = p))  + 
  geom_bar(stat = "identity", fill = "dark green") + 
  theme_mc +
  labs(title = paste("Proportion of state seat of Upper Hunter in Federal seats", ""), caption = "", x = "", y = "") +
  theme(panel.grid.major = element_blank()) +
  geom_text(aes(label = paste0(round(p,1), "%"), vjust = ifelse(p >= 0, -1, 1.5)), size=3) +
  ylim(0, 50)

# EXPORT ---- 

png("img/p_pb_21_s.png", width = 6, height = 4, units = "in", res = 300)
p_pb_21_s
dev.off() 

png("img/p_hunter_s.png", width = 6, height = 4, units = "in", res = 300)
p_hunter_s
dev.off() 
